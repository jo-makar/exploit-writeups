#!/usr/bin/env python3

import math
import subprocess
import tempfile
from typing import List

# https://www.exploit-db.com/exploits/49746 
#shellcode = [72, 184, 1, 1, 1, 1, 1, 1, 1, 1, 80, 72, 184, 46, 99, 104, 111, 46, 114, 105, 1, 72, 49, 4, 36, 72, 137, 231, 104, 59, 49, 1, 1, 129, 52, 36, 1, 1, 1, 1, 72, 184, 68, 73, 83, 80, 76, 65, 89, 61, 80, 49, 210, 82, 106, 8, 90, 72, 1, 226, 82, 72, 137, 226, 106, 99, 72, 184, 98, 105, 110, 47, 120, 99, 97, 108, 80, 72, 184, 1, 1, 1, 1, 1, 1, 1, 1, 80, 72, 184, 44, 98, 1, 46, 116, 114, 115, 46, 72, 49, 4, 36, 72, 184, 1, 1, 1, 1, 1, 1, 1, 1, 80, 72, 184, 46, 99, 104, 111, 46, 114, 105, 1, 72, 49, 4, 36, 49, 246, 86, 106, 19, 94, 72, 1, 230, 86, 106, 24, 94, 72, 1, 230, 86, 106, 24, 94, 72, 1, 230, 86, 72, 137, 230, 106, 59, 88, 15, 5, 0]

# https://www.exploit-db.com/exploits/49745
#shellcode = [16889928, 16843009, 1213202689, 1652108984, 23227744, 70338561, 800606244, 796029813, 1349413218, 1760004424, 16855099, 19149953, 1208025345, 1397310648, 1497451600, 3526447165, 1510500946, 1390543176, 1222805832, 16843192, 16843009, 3091746817, 1617066286, 16867949, 604254536, 1966061640, 1647276659, 827354729, 141186806, 3858843742, 3867756630, 257440618, 2425393157];
# Modified to use DISPLAY=:0 (instead of DISPLAY=:1)
#shellcode = [16889928, 16843009, 1213202689, 1652108984, 23227744, 70338561, 800606244, 796029813, 1349413218, 1760004424, 0x101313b, 19149953, 1208025345, 1397310648, 1497451600, 3526447165, 1510500946, 1390543176, 1222805832, 16843192, 16843009, 3091746817, 1617066286, 16867949, 604254536, 1966061640, 1647276659, 827354729, 141186806, 3858843742, 3867756630, 257440618, 2425393157];
#shellcode = [0x010101010101b848, 0x62792eb848500101, 0x0431480101626d60, 0x2f7273752fb84824, 0x68e78948506e6962, 0x012434810101313b, 0x534944b848010101, 0xd231503d59414c50, 0x52e201485a086a52, 0x010101b848e28948, 0xb848500101010101, 0x0101626d6062792e, 0x752fb84824043148, 0x31506e69622f7273, 0xe601485e086a56f6, 0x0f583b6ae6894856, 0x9090909090909005]
#shellcode = [72, 184, 1, 1, 1, 1, 1, 1, 1, 1, 80, 72, 184, 46, 121, 98, 96, 109, 98, 1, 1, 72, 49, 4, 36, 72, 184, 47, 117, 115, 114, 47, 98, 105, 110, 80, 72, 137, 231, 104, 59, 49, 1, 1, 129, 52, 36, 1, 1, 1, 1, 72, 184, 68, 73, 83, 80, 76, 65, 89, 61, 80, 49, 210, 82, 106, 8, 90, 72, 1, 226, 82, 72, 137, 226, 72, 184, 1, 1, 1, 1, 1, 1, 1, 1, 80, 72, 184, 46, 121, 98, 96, 109, 98, 1, 1, 72, 49, 4, 36, 72, 184, 47, 117, 115, 114, 47, 98, 105, 110, 80, 49, 246, 86, 106, 8, 94, 72, 1, 230, 86, 72, 137, 230, 106, 59, 88, 15, 5, 144, 144, 144]

# Webassembly: int main() { return 42; }
#shellcode = [0x9090c30000002ab8]
#shellcode = [0x00002ab8, 0x9090c300]

#shellcode = [0x48bf480000004fb8, 0xbe41424344454647, 0x90c3050f00000400]
shellcode = [0xb8, 0x4f, 0x00, 0x00, 0x00, 0x48, 0xbf, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0xbe, 0x00, 0x04, 0x00, 0x00, 0x0f, 0x05, 0xc3]

def uintx_to_binary(input: List[int]) -> bytes:
    def uint8_to_binary(input: List[int]) -> bytes:
        assert all([0 <= b and b <= 255 for b in input])
        return bytes(input)

    def uintxle_to_binary(input: List[int], x: int) -> bytes:
        assert all([0 <= w and w <= 2**x-1 for w in input])
        return bytes([(w >> (i * 8)) & 0xff for w in input for i in range(x // 8)])

    max_bits = math.log2(max(input))
    if max_bits <= 8:
        return uint8_to_binary(input)
    elif max_bits <= 16:
        return uintxle_to_binary(input, 16)
    elif max_bits <= 32:
        return uintxle_to_binary(input, 32)
    elif max_bits <= 64:
        return uintxle_to_binary(input, 64)

with tempfile.NamedTemporaryFile() as tmpfile:
    tmpfile.write(uintx_to_binary(shellcode))
    tmpfile.flush()

    kwargs = {'stdout':subprocess.PIPE, 'stderr':subprocess.STDOUT, 'check':True, 'encoding':'utf-8'}
    print(subprocess.run(['ndisasm', '-b', '64', tmpfile.name], **kwargs).stdout)
    #print(subprocess.run(['objdump', '-D', '-b', 'binary', '-m', 'i386:x86-64', '-z', tmpfile.name], **kwargs).stdout)
